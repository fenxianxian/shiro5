<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        ">
   <!--shiro配置
    Realm-->
    <bean id="myRealm" class="com.cht.realm.MyRealm">
        <property name="userService" ref="userServiceImpl"/>
        <property name="roleService" ref="roleServiceImpl"/>
        <property name="permissionService" ref="permissionServiceImpl"/>
        <property name="credentialsMatcher" >
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-256"/>
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="1000"/>
            </bean>
        </property>
    </bean>
    <!--DefaultWebSecurityManager是SecurityManager的默认实现-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--把realm交由securityManager去接管-->
        <property name="realm" ref="myRealm"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>  <!--默认记住我是1年，但此时已经关联了新的记住我，所以是7天-->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!--shiroFilter
    生产SpringShiroFilter
    （持有shiro的过滤相关规则，可进行请求的过滤校验，校验请求是否合法-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--注入核心-->
        <property name="securityManager" ref="securityManager"/>
        <!--编写过滤器链，充分说明了ShiroFilter会来执行这些过滤器链，
       执行过程中需要数据校验就会调用核心securityManager，核心又拥有realm，realm又拥有数据，自然可以校验-->
        <property name="filterChainDefinitions">
            <value>
                /user/regist = anon
                /user/all = authc,perms["student:study"]
                /** = user
            </value>
        </property>
        <!--没有身份认证时的跳转地址-->
        <property name="loginUrl" value="/user/login"/>
        <!--角色和权限校验不通过时的跳转地址-->
        <property name="unauthorizedUrl" value="/user/permission"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--rememberMe是cookie值中的key，value是用户名的密文
        cookie["rememberMe":"deleteMe"] 此cookie每次登陆后都会写出，用于清除之前的cookie
        cookie["rememberMe":"username的密文"] 此cookie也会在登陆后写出，用于记录最新的username
        (如上设计，既能保证每次登陆后重新记录cookie，也能保证切换账号时，记录最新账号)-->
        <property name="name" value="rememberMe"/>
        <!--cookie只在http请求中可用，那么通过js脚本将无法读取到cookie信息，有效防止cookie被窃取-->
        <property name="httpOnly" value="true"/>
        <!--cookie生命周期，单位秒-->
        <property name="maxAge" value="604800"/>  <!--7天-->
    </bean>

    <!--记住我管理器-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!--增加session管理相关配置
    会话cookie模板，默认可省-->
    <!--存sessionId的cookie-->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的key="sid"-->
        <property name="name" value="JSESSIONID"/>
        <!--只允许http请求访问cookie-->
        <property name="httpOnly" value="true"/>
        <!--cookie的过期时间，-1：存活一个会话，单位：秒，默认为-1-->
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <!--session全局超时时间，单位：毫秒，30分钟，默认值为1800000-->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionListeners">
            <list>
                <bean class="com.cht.session.MySessionListener"></bean>
            </list>
        </property>
        <!--session检测的时间间隔，单位毫秒，那15000毫秒就是15秒，也就是说，每15秒检测一次，看看session是否过期，如果过期了，将调用监听器里的onExpiration方法-->
        <property name="sessionValidationInterval" value="15000"/>
    </bean>




</beans>
